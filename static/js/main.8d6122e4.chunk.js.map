{"version":3,"sources":["components/Header.js","models/Product.js","hooks/useInput.js","components/NewItemForm.js","components/Item.js","components/ItemsList.js","App.js","hooks/useLocalStorage.js","serviceWorker.js","i18n.js","index.js","logo.svg"],"names":["Header","changeLanguage","t","classes","makeStyles","createStyles","logo","width","height","marginRight","styles","AppBar","position","Toolbar","Container","maxWidth","Typography","variant","className","src","alt","ButtonGroup","size","color","orientation","disableElevation","Button","onClick","title","Product","name","quantity","unit","id","uuid","bought","this","useInput","initialValue","useState","value","setValue","onChange","event","target","NewItemForm","addProductFn","item","setItem","itemFormParams","setQuantity","qtyFormParams","setUnit","unitFormParams","errors","setErrors","form","display","justifyContent","alignItems","flexWrap","padding","input","margin","unitSelect","minWidth","errorsJsx","length","map","err","index","Alert","key","severity","Paper","square","elevation","onSubmit","preventDefault","tmpErrors","qty","Number","trim","push","isNaN","newProduct","FormGroup","InputLabel","TextField","Select","MenuItem","type","Item","toggleBoughtFn","deleteItemFn","handleBought","ListItem","dense","button","ListItemIcon","Checkbox","edge","checked","tabIndex","disableRipple","ListItemText","IconButton","aria-label","fontSize","ItemsList","items","clearListFn","List","product","App","initValue","localStorageJSON","localStorage","getItem","JSON","parse","error","stringify","useLocalStorage","setItems","useTranslation","i18n","language","updatedItems","updatedItem","filter","Boolean","window","location","hostname","match","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","detection","order","cache","interpolation","escapeValue","ReactDOM","render","StrictMode","fallback","CircularProgress","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message","module","exports"],"mappings":"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","file":"static/js/main.8d6122e4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {createStyles, makeStyles} from \"@material-ui/core/styles\";\r\nimport { AppBar, Toolbar, Typography, Container, ButtonGroup, Button } from \"@material-ui/core\";\r\nimport logo from '../logo.svg';\r\n\r\nexport const Header = ({ changeLanguage, t }) => {\r\n\r\n    const styles = makeStyles(() =>\r\n        createStyles({\r\n            logo: {\r\n                width: '25px',\r\n                height: '25px',\r\n                marginRight: '10px'\r\n            },\r\n    }));\r\n    const classes = styles();\r\n\r\n    return (\r\n        <AppBar position='static'>\r\n            <Toolbar>\r\n                <Container maxWidth='md'>\r\n                    <Typography variant='h6'>\r\n                        <img\r\n                            className={classes.logo}\r\n                            src={logo}\r\n                            alt='Logo'\r\n                        />\r\n                        {t(\"title\")}\r\n                    </Typography>\r\n                </Container>\r\n                <ButtonGroup\r\n                    size='small'\r\n                    color='primary'\r\n                    variant=\"contained\"\r\n                    orientation='horizontal'\r\n                    disableElevation\r\n                >\r\n                    <Button onClick={() => changeLanguage('en')}>\r\n                        <img\r\n                            src={\"assets/en.png\"}\r\n                            title='English'\r\n                            alt='UK Flag'\r\n                        />\r\n                    </Button>\r\n                    <Button onClick={() => changeLanguage('pl')}>\r\n                        <img\r\n                            src={\"assets/pl.png\"}\r\n                            title='Polski'\r\n                            alt='Polish Flag'\r\n                        />\r\n                    </Button>\r\n                </ButtonGroup>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","import {v4 as uuid} from 'uuid';\r\n\r\nexport class Product {\r\n    id = uuid();\r\n    name = '';\r\n    quantity = '';\r\n    unit = '';\r\n    bought = false;\r\n\r\n\r\n    constructor(name, quantity, unit) {\r\n        this.name = name;\r\n        this.quantity = quantity;\r\n        this.unit = unit;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import {useState} from 'react';\r\n\r\n// Custom Hook for saving info from input field\r\nexport const useInput = (initialValue) => {\r\n    const [value, setValue] = useState(initialValue);\r\n\r\n    const onChange = (event) => {\r\n        setValue(event.target.value);\r\n    }\r\n\r\n    return [\r\n        value,\r\n        setValue,\r\n        {\r\n            value,\r\n            onChange,\r\n        }\r\n    ];\r\n}","import React, {useState} from 'react';\r\nimport {\r\n    Paper,\r\n    Container,\r\n    FormGroup,\r\n    InputLabel,\r\n    TextField,\r\n    Select,\r\n    MenuItem,\r\n    Button,\r\n    createStyles\r\n} from \"@material-ui/core\";\r\nimport { Alert } from '@material-ui/lab';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Product} from \"../models/Product\";\r\nimport {useInput} from \"../hooks/useInput\";\r\n\r\nexport const NewItemForm = ({ addProductFn, t }) => {\r\n    const [item, setItem, itemFormParams] = useInput('');\r\n    const [quantity, setQuantity, qtyFormParams] = useInput('');\r\n    const [unit, setUnit, unitFormParams] = useInput('item(s)');\r\n    const [errors, setErrors] = useState([]);\r\n\r\n    // Form submit event with errors handling\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        const tmpErrors = [];\r\n        const qty = Number(quantity);\r\n\r\n        if (item.trim().length < 3) {\r\n            tmpErrors.push(t(\"error.type1\"));\r\n        }\r\n        if (isNaN(qty)) {\r\n            tmpErrors.push(t(\"error.type2\"));\r\n        } else if (qty <= 0) {\r\n            tmpErrors.push(t(\"error.type3\"));\r\n        }\r\n        setErrors(tmpErrors);\r\n\r\n        if (tmpErrors.length === 0) {\r\n            const newProduct = new Product(item, qty, unit);\r\n            addProductFn(newProduct);\r\n            setItem('');\r\n            setQuantity('');\r\n            setUnit(t(\"label.unitType.items\"));\r\n        }\r\n    }\r\n\r\n    // Custom styles\r\n    const styles = makeStyles(() =>\r\n        createStyles({\r\n            form: {\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n                flexWrap: 'wrap',\r\n                padding: '10px'\r\n            },\r\n            input: {\r\n                margin: '10px 20px',\r\n            },\r\n            unitSelect: {\r\n                minWidth: '100px'\r\n            }\r\n        })\r\n    );\r\n    const classes = styles();\r\n\r\n    // If there are any errors, Alert will be shown\r\n    let errorsJsx = null;\r\n    if (errors.length > 0) {\r\n        errorsJsx = errors.map((err, index) => <Alert key={index} severity='error'>{err}</Alert>)\r\n    }\r\n\r\n\r\n    return (\r\n        <Paper square elevation={3}>\r\n            <Container maxWidth='md'>\r\n                {errorsJsx}\r\n                <form className={classes.form} onSubmit={handleSubmit}>\r\n\r\n                    <FormGroup className={classes.input}>\r\n                        <InputLabel>\r\n                            {t(\"label.item\")}\r\n                        </InputLabel>\r\n                        <TextField {...itemFormParams} />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup className={classes.input}>\r\n                        <InputLabel>\r\n                            {t(\"label.quantity\")}\r\n                        </InputLabel>\r\n                        <TextField {...qtyFormParams} />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup className={classes.input}>\r\n                        <InputLabel>\r\n                            {t(\"label.unit\")}\r\n                        </InputLabel>\r\n                        <Select\r\n                            className={classes.unitSelect}\r\n                            {...unitFormParams}\r\n                        >\r\n                            <MenuItem value='g'>\r\n                                {t(\"label.unitType.grams\")}\r\n                            </MenuItem>\r\n                            <MenuItem value='kg'>\r\n                                {t(\"label.unitType.kilograms\")}\r\n                            </MenuItem>\r\n                            <MenuItem value='l'>\r\n                                {t(\"label.unitType.liters\")}\r\n                            </MenuItem>\r\n                            <MenuItem value={t(\"label.unitType.items\")}>\r\n                                {t(\"label.unitType.items\")}\r\n                            </MenuItem>\r\n                        </Select>\r\n                    </FormGroup>\r\n\r\n                    <Button type='submit' variant='contained' color='primary'>\r\n                        {t(\"button.add\")}\r\n                    </Button>\r\n\r\n                </form>\r\n            </Container>\r\n        </Paper>\r\n    );\r\n}","import React from 'react';\r\nimport { ListItem, ListItemIcon, Checkbox, ListItemText, IconButton } from \"@material-ui/core\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nexport const Item = ({ item, toggleBoughtFn, deleteItemFn, t }) => {\r\n\r\n    const handleBought = () => {\r\n        if(typeof toggleBoughtFn === 'function') {\r\n            toggleBoughtFn(item.id);\r\n        }\r\n    }\r\n\r\n    const handleDeleteItem = () => {\r\n        if(typeof deleteItemFn === 'function') {\r\n            deleteItemFn(item.id);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ListItem dense button >\r\n\r\n            <ListItemIcon onClick={handleBought}>\r\n                <Checkbox\r\n                    color='primary'\r\n                    edge='start'\r\n                    checked={item.bought}\r\n                    tabIndex={-1}\r\n                    disableRipple\r\n                />\r\n            </ListItemIcon>\r\n            <ListItemText onClick={handleBought}>\r\n                {item.name} - {item.quantity} {item.unit}\r\n            </ListItemText>\r\n\r\n            <IconButton aria-label=\"delete\" title={t(\"button.delete\")} onClick={handleDeleteItem} >\r\n                <DeleteIcon fontSize=\"small\" />\r\n            </IconButton>\r\n\r\n        </ListItem>\r\n    );\r\n}","import React from 'react';\r\nimport { Container, List, Button } from \"@material-ui/core\";\r\nimport {Item} from \"./Item\";\r\n\r\nexport const ItemsList = ({ items, toggleBoughtFn, clearListFn, deleteItemFn, t }) => {\r\n\r\n    const handleClearList = () => clearListFn();\r\n\r\n    return (\r\n        <Container maxWidth='md'>\r\n            <List>\r\n                {items.map((product) => (\r\n                    <Item\r\n                        key={product.id}\r\n                        item={product}\r\n                        toggleBoughtFn={toggleBoughtFn}\r\n                        deleteItemFn={deleteItemFn}\r\n                        t={t}\r\n                    />\r\n                ))}\r\n            </List>\r\n            {items.length > 0 && (\r\n                <Button variant='contained' color='secondary' onClick={handleClearList}>\r\n                    {t(\"button.clear\")}\r\n                </Button>\r\n            )}\r\n        </Container>\r\n    );\r\n}","import React from 'react';\r\nimport './scss/main.scss';\r\nimport {Header} from \"./components/Header\";\r\nimport {NewItemForm} from \"./components/NewItemForm\";\r\nimport {ItemsList} from \"./components/ItemsList\";\r\nimport {useLocalStorage} from \"./hooks/useLocalStorage\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst App = () => {\r\n    const [items, setItems] = useLocalStorage('itemsList', []);\r\n    // Function to translate content (t), instance to change the language (i18n)\r\n    const [t, i18n] = useTranslation();\r\n    const changeLanguage = (language) => {\r\n        i18n.changeLanguage(language);\r\n    }\r\n\r\n    // Add new product to items array\r\n    const addProduct = (product) => {\r\n        setItems([...items, product]);\r\n    }\r\n\r\n    // Mark product as bought or not bought\r\n    const toggleBought = (id) => {\r\n        const updatedItems = items.map((item) => {\r\n            if (item.id === id) {\r\n                item.bought = !item.bought;\r\n            }\r\n            return item;\r\n        });\r\n        setItems(updatedItems);\r\n    }\r\n\r\n    // Delete product from shopping list\r\n    const deleteItem = (id) => {\r\n        const updatedItem = [...items].filter(item => item.id !== id);\r\n        setItems(updatedItem);\r\n    }\r\n\r\n    // Clear shopping list\r\n    const clearList = () => {\r\n        setItems([]);\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Header changeLanguage={changeLanguage} t={t} />\r\n            <NewItemForm addProductFn={addProduct} t={t} />\r\n            <ItemsList items={items} toggleBoughtFn={toggleBought} clearListFn={clearList} deleteItemFn={deleteItem} t={t} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import {useState} from \"react\";\r\n\r\n// Custom Hook for loading and updating data in Local Storage\r\nexport const useLocalStorage = (key, initValue) => {\r\n    const [value, setValue] = useState(() => {\r\n        try {\r\n            const localStorageJSON = localStorage.getItem(key);\r\n            return localStorageJSON ? JSON.parse(localStorageJSON) : initValue;\r\n        } catch (error) {\r\n            return initValue;\r\n        }\r\n    });\r\n\r\n    const updateValue = (value) => {\r\n        setValue(value);\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n    }\r\n\r\n    return [value, updateValue];\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport Backend from 'i18next-http-backend';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n\r\ni18n\r\n    // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n    // learn more: https://github.com/i18next/i18next-http-backend\r\n    .use(Backend)\r\n    // detect user language\r\n    // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n    .use(LanguageDetector)\r\n    // pass the i18n instance to react-i18next.\r\n    .use(initReactI18next)\r\n    // init i18next\r\n    // for all options read: https://www.i18next.com/overview/configuration-options\r\n    .init({\r\n        fallbackLng: 'en',\r\n        debug: true,\r\n\r\n        detection: {\r\n          order: ['queryString', 'cookie'],\r\n          cache: ['cookie']\r\n        },\r\n\r\n        interpolation: {\r\n            escapeValue: false, // not needed for react as it escapes by default\r\n        }\r\n    });\r\n\r\n\r\nexport default i18n;","import React, {Suspense} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './i18n';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Suspense fallback={<CircularProgress />}>\r\n          <App />\r\n      </Suspense>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.4a1cbb02.svg\";"],"sourceRoot":""}